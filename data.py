# from those points and edges we dijkstra algorithm to determine the shortest path
# note: all weights are equally weighted

points = [
(293,243), 
(411,239),
(540,239),
(169,242),
(43,242),
(167,152),
(165,55),
(103,56),
(39,58),
(202,58),
(373,52),
(409,148),
(409,52),
(477,52),
(542,49),
(55,42),
(141,42),
(204,42),
(412,42),
(566,61),
(517,61),
(478,76),
(466,69),
(395,63),
(373,77),
(354,64),
(332,64),
(246,66),
(212,71),
(202,80),
(191,72),
(25,79),
(25,90),
(27,240),
(255,244),
(166,152),
(409,149),
(41,202)
]

edges =[
(points[1],points[2],1),
(points[1],points[36],1),
(points[1],points[0],1),
(points[0],points[34],1),
(points[34],points[3],1),
(points[3],points[4],1),
(points[3],points[35],1),
(points[4],points[33],1),
(points[4],points[37],1),
(points[35],points[6],1),
(points[6],points[16],1),
(points[6],points[17],1),
(points[6],points[7],1),
(points[6],points[9],1),
(points[7],points[15],1),
(points[7],points[8],1),
(points[8],points[31],1),
(points[8],points[32],1),
(points[8],points[15],1),
(points[9],points[17],1),
(points[9],points[30],1),
(points[9],points[28],1),
(points[9],points[29],1),
(points[9],points[27],1),
(points[10],points[9],1),
(points[10],points[26],1),
(points[10],points[25],1),
(points[10],points[24],1),
(points[10],points[23],1),
(points[10],points[12],1),
(points[10],points[18],1),
(points[36],points[12],1),
(points[12],points[13],1),
(points[13],points[22],1),
(points[13],points[21],1),
(points[13],points[20],1),
(points[13],points[14],1),
(points[14],points[20],1),
(points[14],points[19],1),
(points[2],points[1],1),
(points[36],points[1],1),
(points[0],points[1],1),
(points[34],points[0],1),
(points[3],points[34],1),
(points[4],points[3],1),
(points[35],points[3],1),
(points[33],points[4],1),
(points[37],points[4],1),
(points[6],points[35],1),
(points[16],points[6],1),
(points[17],points[6],1),
(points[7],points[6],1),
(points[9],points[6],1),
(points[15],points[7],1),
(points[8],points[7],1),
(points[31],points[8],1),
(points[32],points[8],1),
(points[15],points[8],1),
(points[17],points[9],1),
(points[30],points[9],1),
(points[28],points[9],1),
(points[29],points[9],1),
(points[27],points[9],1),
(points[9],points[10],1),
(points[26],points[10],1),
(points[25],points[10],1),
(points[24],points[10],1),
(points[23],points[10],1),
(points[12],points[10],1),
(points[18],points[10],1),
(points[12],points[36],1),
(points[13],points[12],1),
(points[22],points[13],1),
(points[21],points[13],1),
(points[20],points[13],1),
(points[14],points[13],1),
(points[20],points[14],1),
(points[19],points[14],1),
]

# currently avaliable halls
halls = {'344':(540,239),'319':points[4],'IEEE':points[0],'WC':points[11],'329':points[6],'341':points[14]}